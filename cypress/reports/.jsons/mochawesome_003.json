{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-16T15:00:19.187Z",
    "end": "2025-03-16T15:00:21.827Z",
    "duration": 2640,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "529be892-e249-47ed-9399-653bf6495b7d",
      "title": "",
      "fullFile": "cypress/e2e/tests/TC_04_Request_Chain.cy.js",
      "file": "cypress/e2e/tests/TC_04_Request_Chain.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "17259345-3f04-47d7-acc3-4890df9546f0",
          "title": "Handling async request in Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should handle CRUD operations correctly with JSONPlaceholder",
              "fullTitle": "Handling async request in Cypress should handle CRUD operations correctly with JSONPlaceholder",
              "timedOut": null,
              "duration": 2616,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = \"https://jsonplaceholder.typicode.com/posts\";\nlet header = {\n  'Content-type': 'application/json; charset=UTF-8'\n};\nlet createdPostBody = {\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\n// Step 1: Fake Create Post (API sẽ trả ID nhưng không lưu thật)\ncy.request({\n  method: 'POST',\n  url: url,\n  headers: header,\n  body: createdPostBody\n}).then(postResponse => {\n  expect(postResponse.status).to.eq(201);\n  const fakePostId = postResponse.body.id; // Lưu ID giả từ API\n  cy.log(`Created Fake Post ID: ${fakePostId}`);\n  // Step 2: Get an existing post (tránh lỗi 404)\n  cy.request({\n    method: 'GET',\n    url: `${url}/1` // Dùng ID có sẵn thay vì fake ID\n  }).then(getResponse => {\n    expect(getResponse.status).to.eq(200);\n    cy.log('Fetched Existing Post:', getResponse.body);\n    // Step 3: Update post (chỉ có thể update ID từ 1-100)\n    let updatedPostBody = {\n      id: 1,\n      // Chỉ có thể update các ID có sẵn\n      title: 'Updated Title',\n      body: 'Updated Content',\n      userId: 1\n    };\n    cy.request({\n      method: 'PUT',\n      url: `${url}/1`,\n      // Dùng ID có sẵn\n      headers: header,\n      body: updatedPostBody\n    }).then(updateResponse => {\n      expect(updateResponse.status).to.eq(200);\n      expect(updateResponse.body).to.have.property('title', 'Updated Title');\n      cy.log('Post updated:', updateResponse.body);\n      // Step 4: Try to Delete (sẽ không thật sự xóa nhưng không lỗi)\n      cy.request({\n        method: 'DELETE',\n        url: `${url}/1`,\n        // Xóa post có sẵn (dù không thực sự xóa)\n        failOnStatusCode: false // Tránh fail test nếu API trả lỗi\n      }).then(deleteResponse => {\n        expect(deleteResponse.status).to.eq(200);\n        cy.log('Post delete request sent');\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "76f197b1-f057-432b-947f-d012a619381b",
              "parentUUID": "17259345-3f04-47d7-acc3-4890df9546f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76f197b1-f057-432b-947f-d012a619381b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2616,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "embeddedScreenshots": true,
        "reportPageTitle": "My test Suite Result"
      },
      "version": "6.2.0"
    }
  }
}